<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.smarthome.mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.example.smarthome.admin.Orders" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="gt_id" property="gtId" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="sadd_id" property="saddId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, gt_id, count, state, total, sadd_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.smarthome.admin.Orders" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orders (user_id, gt_id, count, 
      state, total, sadd_id
      )
    values (#{userId,jdbcType=INTEGER}, #{gtId,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{total,jdbcType=INTEGER}, #{saddId,jdbcType=INTEGER}
      )
  </insert>

  <!--购物车商品付款之后生成订单信息-->
  <insert id="insertSelective" parameterType="com.example.smarthome.admin.Orders" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="gtId != null" >
        gt_id,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="saddId != null" >
        sadd_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="gtId != null" >
        #{gtId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        #{total,jdbcType=INTEGER},
      </if>
      <if test="saddId != null" >
        #{saddId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.smarthome.admin.Orders" >
    update orders
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="gtId != null" >
        gt_id = #{gtId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="saddId != null" >
        sadd_id = #{saddId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.smarthome.admin.Orders" >
    update orders
    set user_id = #{userId,jdbcType=INTEGER},
      gt_id = #{gtId,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      total = #{total,jdbcType=INTEGER},
      sadd_id = #{saddId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--查询所有的订单信息-->
  <select id="selectAllOrders" resultType="java.util.Map">
        SELECT state,gtname,goodsname,price,'count',imgurl
        FROM orders
        LEFT JOIN goodstype ON goodstype.id = orders.gt_id
        LEFT JOIN goods ON goods.id = goodstype.goods_id
        LEFT JOIN cart ON cart.gt_id = goodstype.id
        LEFT JOIN photo ON photo.goods_id = goods.id
  </select>

  <!--根据商品名称查询对应的订单信息-->
  <select id="selectOrders" resultType="java.util.Map">
        SELECT state,gtname,goodsname,price,'count',imgurl
        FROM orders
        LEFT JOIN goodstype ON goodstype.id = orders.gt_id
        LEFT JOIN goods ON goods.id = goodstype.goods_id
        LEFT JOIN cart ON cart.gt_id = goodstype.id
        LEFT JOIN photo ON photo.goods_id = goods.id
        where goodsname = #{goodsname} and orders.user_id = #{userId}
  </select>

  <!--查询不同状态对应的订单信息-->
  <select id="selectOrdersByState" resultType="java.util.Map">
        SELECT state,gtname,goodsname,price,'count',imgurl
        FROM orders
        LEFT JOIN goodstype ON goodstype.id = orders.gt_id
        LEFT JOIN goods ON goods.id = goodstype.goods_id
        LEFT JOIN cart ON cart.gt_id = goodstype.id
        LEFT JOIN photo ON photo.goods_id = goods.id
        where state = #{state} and orders.user_id = #{userId}
  </select>

  <!--展示订单详情-->
  <select id="showDetail" resultType="java.util.Map">
    SELECT orders.count AS count,gtname,goodsname,price,imgurl,username,phone,shoppaddress.createtime AS createtime,state,total,sadd_id
    FROM orders
    LEFT JOIN shoppaddress ON shoppaddress.id = orders.sadd_id
    LEFT JOIN `user` ON `user`.id = shoppaddress.user_id
    LEFT JOIN cart ON cart.user_id = `user`.id
    LEFT JOIN goodstype ON goodstype.id = cart.gt_id
    LEFT JOIN goods ON goods.id = goodstype.goods_id
    LEFT JOIN photo ON photo.goods_id = goods.id
  </select>
</mapper>